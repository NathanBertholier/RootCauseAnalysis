openapi: 3.0.0
servers:
  - url: http://localhost:8080
info:
  version: 0.3.0
  title: RootCause - API
  description: |2-
     API designed to use Root Cause features.  
     Implemented features:                     
     - [POST] insertlog
     - [GET]  report/{id}
     - [GET]  link
     - [GET]  tokens
     - [GET]  tokentypes
     
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /insertlog:
    post:
      tags:
        - Insertion
      description: Adds a log to the database
      operationId: insertLog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertionLogFormat'
      responses:
        '200':
          description: Successful insertion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsertionLogResponse'
        '400':
          description: Invalid parameter. Insertion failed
  /report/{id}:
    get:
      tags:
        - Report Generation
      description: >-
        Generates a report according to a given log id. Given log must be known
        from the DB
      operationId: generateReport
      parameters:
        - name: id
          in: path
          description: Id of the targetted log
          required: true
          schema:
            type: integer
        - name: expanded
          in: query
          description: Includes proximity values
          required: false
          schema:
            type: boolean
            default: false
        - name: no_cache
          in: query
          description: force to recompute report
          required: false
          schema:
            type: boolean
            default: false
        - name: delta
          in: query
          description: Delta search time
          required: false
          schema:
            type: integer
            default: 7200
        - name: proximity_limit
          in: query
          description: Proximity limit to be taken into account in the report
          required: false
          schema:
            type: number
            default: 80
        - name: network_size
          in: query
          description: Size of the network
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: Report
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ReportResponseExpanded'
                  - $ref: '#/components/schemas/ReportResponse'
        '404':
          description: Empty log id. Generation failed.
          content:
              application/json:
                schema:
                  type: string
                  oneOf:
                    - example: ID does not exist or is too old
                    - example: Log not yet tokenized. Generation failed
  /link:
    get:
      tags:
        - Link Computation
      description: compute proximity between each tokens of two logs
      operationId: computeLink
      parameters:
        - name: id1
          in: query
          description: Id of the first targetted log
          required: true
          schema:
            type: integer
        - name: id2
          in: query
          description: Id of the second targetted log
          required: true
          schema:
            type: integer
        - name: delta
          in: query
          description: Delta search time
          required: false
          schema:
            type: integer
            default: 7200
      responses:
        '200':
          description: Proximity computation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinksResponse'
        '404':
          description: Log not found
          content:
            application/json:
              schema:
                type: string
                oneOf:
                  - example: ID does not exist or is too old
                  - example: Log not yet tokenized. Generation failed
                  
  /tokens:
    get:
      tags:
        - Tokens List
      description: Get a list of logs with linked tokens
      operationId: getTokens
      parameters:
        - name: TokenRequest
          in: body
          description: Parameters of the request
          required: true
          schema:
            $ref: '#/components/schemas/TokensRequest'
      responses:
        '200':
          description: Report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensResponse'
        '404':
          description: Empty log id. Generation failed.
          content:
              application/json:
                schema:
                  type: string
                  oneOf:
                    - example: ID does not exist or is too old
                    - example: Log not yet tokenized. Generation failed
  /tokentypes:
    get:
      tags:
        - Token Types List
      description: Get a list of token types
      operationId: getTokenTypes
      responses:
        '200':
          description: TokenTypes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenTypes'
components:
  schemas:
    Log:
      type: object
      properties:
        id:
          type: integer
          example: 54
        content:
          type: string
          example: 2021-11-20 00:00:01 10.16.27.62.244 GET index.html
        datetime:
          type: string
          example: '2021-12-29T21:54:05.000'
    Token:
      type: object
      properties:
        name:
          type: string
          example: IP
        value:
          type: array
          items:
            type: string
            example: 10.16.27.62.244
        count:
          type: integer
          example: 3
    Proximity:
      type: object
      properties:
        id:
          type: integer
          example: 54
        links:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 56
              proximity:
                type: number
                example: 91
    ReportResponse:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Log'
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/Token'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/Log'
    ReportResponseExpanded:
      type: object
      properties:
        root:
          $ref: '#/components/schemas/Log'
        tokens:
          type: array
          items:
            $ref: '#/components/schemas/Token'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        proximity:
          type: array
          items:
            $ref: '#/components/schemas/Proximity'
    InsertionLogFormat:
      type: array
      items:
        type: object
        required:
          - log
        properties:
          log:
            type: string
    InsertionLogResponse:
      type: array
      items:
        type: object
        required:
          - id
        properties:
          id:
            type: integer
    Computation:
      type: object
      properties:
        token_type:
          type: string
          example: IP
        value_log1:
          type: string
          example: 10.16.27.62.244
        value_log2:
          type: string
          example: 10.16.27.62.244
        proximity:
          type: number
          example: 2.50
    LogDemonstrator:
      type: object
      properties:
        id:
          type: integer
          example: 54
        datetime:
          type: string
          example: '2021-11-20T00:00:05.000'
        content:
          type: string
          example: 2021-11-20 00:00:01 10.16.27.62.244 GET
        tokens:
          type: array
          items:
            type: object
            properties:
              token_type:
                type: string
                example: IP
              value:
                type: array
                items:
                  type: string
                  example: 10.16.27.62.244
    TokenTypes:
      type: array
      items:
        type: string
        example: [IP, Datetime]
    LinksResponse:
      type: object
      properties:
        computations:
          type: array
          items:
            $ref: '#/components/schemas/Computation'
        proximity:
          type: number
          example: 1.97
    TokensRequest:
      type: object
      properties:
        init_datetime:
          type: string
          example: '2021-11-20T00:00:05.000'
        end_datetime:
          type: string
          example: '2021-11-20T00:20:00.000'
        id:
          type: integer
          example: 54
        tokens:
          type: array
          items:
            type: object
            properties:
              token_type:
                type: string
                example: IP
              token_value:
                type: string
                example: 10.16.27.62.244
        rows:
          type: integer
          example: 100
    TokensResponse:
      type: array
      items:
        $ref: '#/components/schemas/LogDemonstrator'