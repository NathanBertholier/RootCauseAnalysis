user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid       /var/run/nginx.pid;

events {
	worker_connections 1024;
}
http {
	upstream rootcause{
        server rootcause:8081;
	}

	upstream grafana{
        server grafana:3000;
	}

	server {
		listen   *:80;
        server_name rootcause grafana;
        #return 301 https://$host$request_uri;
        location / {
            # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
            proxy_pass http://rootcause;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

	server {
        listen   443 ssl;
        server_name  rootcause;

        ssl_certificate     /etc/nginx/certs/cert.crt;
        ssl_certificate_key /etc/nginx/certs/cert.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # allow large uploads of files
        client_max_body_size 80M;

        # optimize downloading files larger than 1G
        #proxy_max_temp_file_size 2G;
        location / {
            # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
            proxy_pass http://rootcause;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
	}
}